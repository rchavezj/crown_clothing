{"ast":null,"code":"import _objectSpread from \"/Users/user/Github/crown_clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/user/Github/crown_clothing/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\"; // import { auth } from \"./firebase/firebase.utils\";\n\nimport ShopPage from './pages/shop/shop.component';\nimport Header from \"./components/header/header.component\";\nimport HomePage from './pages/homepage/homepage.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'; // import { auth } from 'firebase';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      // Check if the userAuth\n      // exist within the database\n      if (userAuth) {\n        // Check if the snapShot has updated\n        // I.N.O Check if the database, at the ref, is updated with new data\n        const userRef = await createUserProfileDocument(userAuth); // The moment userRef instantiate, it will\n        // send us a snapshot object, representing the data\n        // related to the user we possibly stored on our database\n\n        userRef.onSnapshot( // Object above (userRef) is where we're going to get the data\n        // related to this user that we just possibly stored.\n        snapShot => {\n          console.log(snapShot);\n          this.setState({\n            currentUser: _objectSpread({\n              id: snapShot.id\n            }, snapShot.data())\n          });\n        });\n      }\n\n      this.setState({\n        currentUser: userAuth\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUpPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/user/Github/crown_clothing/src/App.js"],"names":["React","Route","Switch","auth","createUserProfileDocument","ShopPage","Header","HomePage","SignInAndSignUpPage","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","console","log","setState","id","data","componentWillUnmount","render"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAEA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD,C,CACA;;AAEA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC,C,CACA;;AAGA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AADY,SAQdC,mBARc,GAQQ,IARR;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,mBAAL,GAA2BT,IAAI,CAACa,kBAAL,CACzB,MAAMC,QAAN,IAAkB;AAChB;AACA;AACA,UAAIA,QAAJ,EAAc;AACZ;AACA;AACA,cAAMC,OAAO,GAAG,MAAMd,yBAAyB,CAACa,QAAD,CAA/C,CAHY,CAIZ;AACA;AACA;;AACAC,QAAAA,OAAO,CAACC,UAAR,EACE;AACA;AACAC,QAAAA,QAAQ,IAAI;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,eAAKG,QAAL,CAAc;AACZT,YAAAA,WAAW;AACTU,cAAAA,EAAE,EAAEJ,QAAQ,CAACI;AADJ,eAENJ,QAAQ,CAACK,IAAT,EAFM;AADC,WAAd;AAMD,SAXH;AAaD;;AACD,WAAKF,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAEG;AAAf,OAAd;AACD,KA1BwB,CAA3B;AA4BD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB,SAAKd,mBAAL;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEP,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEF,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEG,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AAzD+B;;AA6DlC,eAAeC,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\n// import { auth } from \"./firebase/firebase.utils\";\n\nimport ShopPage from './pages/shop/shop.component';\nimport Header from \"./components/header/header.component\";\nimport HomePage from './pages/homepage/homepage.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\n// import { auth } from 'firebase';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(\n      async userAuth => {\n        // Check if the userAuth\n        // exist within the database\n        if (userAuth) {\n          // Check if the snapShot has updated\n          // I.N.O Check if the database, at the ref, is updated with new data\n          const userRef = await createUserProfileDocument(userAuth);\n          // The moment userRef instantiate, it will\n          // send us a snapshot object, representing the data\n          // related to the user we possibly stored on our database\n          userRef.onSnapshot(\n            // Object above (userRef) is where we're going to get the data\n            // related to this user that we just possibly stored.\n            snapShot => {\n              console.log(snapShot);\n              this.setState({\n                currentUser: {\n                  id: snapShot.id,\n                  ...snapShot.data()\n                }\n              });\n            }\n          );\n        }\n        this.setState({ currentUser: userAuth });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header currentUser={this.state.currentUser} />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route path=\"/signin\" component={SignInAndSignUpPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}