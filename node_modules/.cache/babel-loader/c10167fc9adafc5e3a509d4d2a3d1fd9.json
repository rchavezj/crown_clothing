{"ast":null,"code":"var _jsxFileName = \"/Users/user/Github/crown_clothing/src/components/cart-dropdown/cart-dropdown.components.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(CartItemTernaryList, {\n  cartItems: cartItems,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Go to checkout\"));\n\nconst CartItemTernaryList = ({\n  cartItems\n}) => cartItems.length ? React.createElement(CartItemList, {\n  cartItems: cartItems,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}) : React.createElement(CartItemEmpty, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n});\n\nconst CartItemList = ({\n  cartItems\n}) => cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}));\n\nconst CartItemEmpty = () => React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \" Your cart is empty\");\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/user/Github/crown_clothing/src/components/cart-dropdown/cart-dropdown.components.jsx"],"names":["React","connect","withRouter","createStructuredSelector","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdown","cartItems","history","dispatch","push","CartItemTernaryList","length","CartItemList","map","cartItem","id","CartItemEmpty","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,SAASC,eAAT,QAAgC,iCAAhC;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,oBAAC,mBAAD;AAAqB,EAAA,SAAS,EAAEF,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADH,CADF,EAIE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbC,IAAAA,OAAO,CAACE,IAAR,CAAa,WAAb;AACAD,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CADF;;AAmBA,MAAMM,mBAAmB,GAAG,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KACxBA,SAAS,CAACK,MAAV,GAAmB,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAEL,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAnB,GAA4D,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADhE;;AAGA,MAAMM,YAAY,GAAG,CAAC;AAAEN,EAAAA;AAAF,CAAD,KACjBA,SAAS,CAACO,GAAV,CACIC,QAAQ,IACJ,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFR,CADJ;;AAOA,MAAME,aAAa,GAAG,MAAQ;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA9B;;AAMA,MAAMC,eAAe,GAAGjB,wBAAwB,CAAE;AAC9CM,EAAAA,SAAS,EAAEH;AADmC,CAAF,CAAhD;AAGA,eAAeJ,UAAU,CAACD,OAAO,CAACmB,eAAD,CAAP,CAAyBZ,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\n\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\n\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\n\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <div className=\"cart-dropdown\">\n    <div className=\"cart-items\">\n      {<CartItemTernaryList cartItems={cartItems} />}\n    </div>\n    <CustomButton \n      onClick={() => {\n        history.push('/checkout');\n        dispatch(toggleCartHidden()); \n      }}\n    >\n      Go to checkout\n    </CustomButton>\n  </div>\n);\n\n\n\n\nconst CartItemTernaryList = ({ cartItems }) =>(\n    cartItems.length ? <CartItemList cartItems={cartItems} /> : <CartItemEmpty />\n); \nconst CartItemList = ({ cartItems }) => (\n    cartItems.map(\n        cartItem => (\n            <CartItem key={cartItem.id} item={cartItem} />\n        )\n    )\n); \nconst CartItemEmpty = () => ( <span className=\"empty-message\"> Your cart is empty</span> );\n\n\n\n\n\nconst mapStateToProps = createStructuredSelector ({\n    cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}