{"ast":null,"code":"import _objectSpread from \"/Users/user/Github/crown_clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCkjA-b6_4miXNrrTsp69z5B3oDmKbALQA\",\n  authDomain: \"crwn-db-bc7b4.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-bc7b4.firebaseio.com\",\n  projectId: \"crwn-db-bc7b4\",\n  storageBucket: \"crwn-db-bc7b4.appspot.com\",\n  messagingSenderId: \"229670806736\",\n  appId: \"1:229670806736:web:9a66ced53b86398c37aad5\",\n  measurementId: \"G-Z2Q8TQFVSJ\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exist) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {}\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // Google authintication utility\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/user/Github/crown_clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exist","displayName","email","createdAt","Date","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,KAAd,EAAqB;AAAA,UACXC,WADW,GACYT,QADZ,CACXS,WADW;AAAA,UACEC,KADF,GACYV,QADZ,CACEU,KADF;AAEnB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMV,OAAO;AACXO,QAAAA,WADW;AAEXC,QAAAA,KAFW;AAGXC,QAAAA;AAHW,SAIRV,cAJQ,EAAb;AAMD,KAPD,CAOC,OAAOY,KAAP,EAAa,CAEb;AACF;AACF,CAtBM;AAwBPxB,QAAQ,CAACyB,aAAT,CAAuBxB,MAAvB;AAEA,OAAO,MAAMyB,IAAI,GAAG1B,QAAQ,CAAC0B,IAAT,EAAb;AACP,OAAO,MAAMZ,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AACA,MAAMa,QAAQ,GAAG,IAAI3B,QAAQ,CAAC0B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAGP,eAAe3B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyCkjA-b6_4miXNrrTsp69z5B3oDmKbALQA\",\n  authDomain: \"crwn-db-bc7b4.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-bc7b4.firebaseio.com\",\n  projectId: \"crwn-db-bc7b4\",\n  storageBucket: \"crwn-db-bc7b4.appspot.com\",\n  messagingSenderId: \"229670806736\",\n  appId: \"1:229670806736:web:9a66ced53b86398c37aad5\",\n  measurementId: \"G-Z2Q8TQFVSJ\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exist) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try{\n      await userRef({\n        displayName, \n        email,\n        createdAt,\n        ...additionalData\n      })\n    }catch (error){\n\n    }\n  }\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// Google authintication utility\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}