{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCkjA-b6_4miXNrrTsp69z5B3oDmKbALQA\",\n  authDomain: \"crwn-db-bc7b4.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-bc7b4.firebaseio.com\",\n  projectId: \"crwn-db-bc7b4\",\n  storageBucket: \"crwn-db-bc7b4.appspot.com\",\n  messagingSenderId: \"229670806736\",\n  appId: \"1:229670806736:web:9a66ced53b86398c37aad5\",\n  measurementId: \"G-Z2Q8TQFVSJ\"\n}; // \n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  console.log(firestore.doc('users/lkshfdkjhds')); // const userRef = firestore.doc(`users/${userAuth.uid}`);\n  // const snapshot = await userRef.get();\n  // if (!snapshot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n  //   try{\n  //     await userRef.set({\n  //       displayName, \n  //       email,\n  //       createdAt,\n  //       ...additionalData\n  //     })\n  //   }catch (error){\n  //     console.log('error creating user: ', error.message);\n  //   }\n  // }\n  // return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // Google authintication utility\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/user/Github/crown_clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","console","log","firestore","doc","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf,C,CAYA;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AAEdE,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,CAACC,GAAV,CAAc,mBAAd,CAAZ,EAH2E,CAK3E;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAxBM;AA0BPhB,QAAQ,CAACiB,aAAT,CAAuBhB,MAAvB;AAEA,OAAO,MAAMiB,IAAI,GAAGlB,QAAQ,CAACkB,IAAT,EAAb;AACP,OAAO,MAAMH,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB,C,CAEP;;AACA,MAAMI,QAAQ,GAAG,IAAInB,QAAQ,CAACkB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAGP,eAAenB,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyCkjA-b6_4miXNrrTsp69z5B3oDmKbALQA\",\n  authDomain: \"crwn-db-bc7b4.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-bc7b4.firebaseio.com\",\n  projectId: \"crwn-db-bc7b4\",\n  storageBucket: \"crwn-db-bc7b4.appspot.com\",\n  messagingSenderId: \"229670806736\",\n  appId: \"1:229670806736:web:9a66ced53b86398c37aad5\",\n  measurementId: \"G-Z2Q8TQFVSJ\"\n};\n\n\n// \nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return;\n\n  console.log(firestore.doc('users/lkshfdkjhds'))\n\n  // const userRef = firestore.doc(`users/${userAuth.uid}`);\n  // const snapshot = await userRef.get();\n\n  // if (!snapshot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n\n  //   try{\n  //     await userRef.set({\n  //       displayName, \n  //       email,\n  //       createdAt,\n  //       ...additionalData\n  //     })\n  //   }catch (error){\n  //     console.log('error creating user: ', error.message);\n  //   }\n  // }\n  // return userRef;\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// Google authintication utility\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}